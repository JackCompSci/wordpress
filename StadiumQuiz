using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Arrays
{
    class Program
    {
        static StadiumStruct[] Premiership = new StadiumStruct[50];
        static void Main(string[] args)
        {
            Console.OutputEncoding = System.Text.UnicodeEncoding.Unicode;
            Console.ForegroundColor = ConsoleColor.White;
            int maxStadium = loadData();
            if (maxStadium == 404)
            {
                Setup();
                Console.WriteLine("An error occured loading data,\nclose and reopen the program, if the problem persists,\nplease check that all files are present, or reinstall.");
                Console.ReadLine();
            }
            else
            {
                saveData("main", "", "", "", 0, 0, 0);
                Menu(maxStadium);
            }
        }

        static void Menu(int maxStadium)
        {
            string select1L = "", select1R = "", select2L = "", select2R = "", select3L = "", select3R = "";
            bool exit = false;

            try
            {
                do
                {
                    Console.Clear();
                    Console.WriteLine("Please select an option:\n");
                    Console.WriteLine(select1L + "Start Quiz" + select1R);
                    Console.WriteLine(select2L + "New Stadium" + select2R);
                    Console.WriteLine(select3L + "Load Data" + select3R);
                    string mainMenuInput = Console.ReadLine();

                    switch (mainMenuInput)
                    {
                        case "1":
                            select1L = "[";
                            select1R = "]";
                            select2L = "";
                            select2R = "";
                            select3L = "";
                            select3R = "";
                            break;
                        case "2":
                            select1L = "";
                            select1R = "";
                            select2L = "[";
                            select2R = "]";
                            select3L = "";
                            select3R = "";
                            break;
                        case "3":
                            select1L = "";
                            select1R = "";
                            select2L = "";
                            select2R = "";
                            select3L = "[";
                            select3R = "]";
                            break;
                        case "q":
                            if (select1R == "]")
                            {
                                Quiz(0, maxStadium);
                            }
                            else
                            {
                                if (select2R == "]")
                                {
                                    createStadium(maxStadium);
                                }
                                else
                                {
                                    if (select3R == "]")
                                    {
                                        maxStadium = loadData();
                                    }
                                }
                            }
                            break;
                        case "e":
                            exit = true;
                            break;
                    }
                }
                while (exit == false);
                Console.Clear();
                Console.WriteLine("Enter e to exit");
                Console.ReadLine();
                Console.Clear();
            }
            catch (Exception e)
            {
                Console.Clear();
                Console.WriteLine(e + "\n\n-*-*-*-*-*-*-*-*-*-*-*-*-\n\nAn Error Occured\nPress Enter to Continue...\n\n-*-*-*-*-*-*-*-*-*-*-*-*-");
                Console.ReadLine();
                Menu(maxStadium);
            }
        }

        static void createStadium(int maxStadium)
        {
            Console.Clear();
            Console.WriteLine("-------------------------------\n       Add a New Stadium\n-------------------------------\n\n");
            Console.WriteLine("What is the name of the stadium?");
            string name = Console.ReadLine();
            Console.WriteLine("\nWhat city is the stadium in?");
            string city = Console.ReadLine();
            Console.WriteLine("\nWhat team occupies the stadium?");
            string team = Console.ReadLine();
            Console.WriteLine("\nWhat is the capacity of the stadium?");
            int capacity = Convert.ToInt16(Console.ReadLine());
            Console.WriteLine("\nWhat year was the stadium construction completed in?");
            int yearBuilt = Convert.ToInt16(Console.ReadLine());
            Console.WriteLine("\nWhat is the construction cost of the stadium?");
            int cost = Convert.ToInt16(Console.ReadLine());
            Console.Clear();
            Console.WriteLine("Would you like to add this new stadium?");
            Console.WriteLine("Name: {0}\nCity: {1}\nTeam: {2}\nCapacity: {3}\nYear Built: {4}\nCost: {5}", name, city, team, capacity, yearBuilt, cost);
            Console.WriteLine("\n\n(Y) Yes or (N) No");
            string confirmInput = Console.ReadLine();
            if (confirmInput == "Y")
            {
                maxStadium = saveData("createNew", name, city, team, capacity, yearBuilt, cost);
                Console.Clear();
                Console.WriteLine("Stadium Saved Successfully!");
                Console.ReadLine();
                Menu(maxStadium);
            }
            else
            {
                createStadium(maxStadium);
            }
        }
        static void Quiz(int stadiumNumber, int maxStadium)
        {
            Console.Clear();
            for (int i = 0; i < maxStadium; i++)
            {
                Question(stadiumNumber);
                stadiumNumber++;
            }
            Console.WriteLine("Press enter to return to Main Menu...");
            Console.ReadLine();
        }
        static int saveData(string mode, string name, string city, string team, int capacity, int yearBuilt, decimal cost)
        {
            BinaryReader br2 = new BinaryReader(new FileStream("config", FileMode.Open));
            int stadiumQuantity = br2.ReadInt32();
            br2.Close();

            if (mode == "main")
            {
                for (int i = 0; i < stadiumQuantity; i++)
                {
                    BinaryWriter bw = new BinaryWriter(new FileStream("stadiumData" + i, FileMode.Create));
                    bw.Write(Premiership[i].Name);
                    bw.Write(Premiership[i].City);
                    bw.Write(Premiership[i].Team);
                    bw.Write(Premiership[i].Capacity);
                    bw.Write(Premiership[i].YearBuilt);
                    bw.Write(Premiership[i].Cost);
                    bw.Close();
                    return stadiumQuantity;
                }
            }
            else
            {
                if (mode == "createNew")
                {
                    int newStadiumQuantity = stadiumQuantity + 1;
                    Premiership[stadiumQuantity].Name = name;
                    Premiership[stadiumQuantity].City = city;
                    Premiership[stadiumQuantity].Team = team;
                    Premiership[stadiumQuantity].Capacity = capacity;
                    Premiership[stadiumQuantity].YearBuilt = yearBuilt;
                    Premiership[stadiumQuantity].Cost = cost;

                    BinaryWriter bw2 = new BinaryWriter(new FileStream("config", FileMode.Create));
                    bw2.Write(newStadiumQuantity);
                    bw2.Close();

                    BinaryWriter bw = new BinaryWriter(new FileStream("stadiumData" + stadiumQuantity, FileMode.Create));
                    bw.Write(Premiership[stadiumQuantity].Name);
                    bw.Write(Premiership[stadiumQuantity].City);
                    bw.Write(Premiership[stadiumQuantity].Team);
                    bw.Write(Premiership[stadiumQuantity].Capacity);
                    bw.Write(Premiership[stadiumQuantity].YearBuilt);
                    bw.Write(Premiership[stadiumQuantity].Cost);
                    bw.Close();
                    stadiumQuantity = newStadiumQuantity;
                    saveData("main", "", "", "", 0, 0, 0);
                    return stadiumQuantity;
                }
            }
            return stadiumQuantity;
        }
        static int loadData()
        {
            try
            {
                BinaryReader br2 = new BinaryReader(new FileStream("config", FileMode.Open));
                int stadiumQuantity = br2.ReadInt16();
                br2.Close();

                for (int i = 0; i < stadiumQuantity; i++)
                {
                BinaryReader br = new BinaryReader(new FileStream("stadiumData" + i, FileMode.Open));
                Premiership[i].Name = br.ReadString();
                Premiership[i].City = br.ReadString();
                Premiership[i].Team = br.ReadString();
                Premiership[i].Capacity = br.ReadInt32();
                Premiership[i].YearBuilt = br.ReadInt32();
                Premiership[i].Cost = br.ReadInt32();
                br.Close();
                }
                return stadiumQuantity;
            }
            catch (Exception)
            {
                bool setupBool = Setup();
                if (setupBool == true)
                {
                    return 5;
                }
                else
                {
                    if (setupBool == false)
                    {
                        return 404;
                    }
                    else return 404;
                }
            }
        }

        static void Question(int stadiumNumber)
        {
            char tick = '\u221A';
            string cityCheck = "";
            string teamCheck = "";
            string capacityCheck = "";
            string yearBuiltCheck = "";
            string costCheck = "";

            Console.WriteLine("====================");
            Console.WriteLine("Stadium #" + (stadiumNumber + 1) + " - " + Premiership[stadiumNumber].Name);
            Console.WriteLine("====================");
            Console.WriteLine("\nQ1) In which city is " + Premiership[stadiumNumber].Name + " located?");
            string inputCity = Console.ReadLine();
            Console.WriteLine("\nQ2) What team occupies " + Premiership[stadiumNumber].Name + "?");
            string inputTeam = Console.ReadLine();
            Console.WriteLine("\nQ3) What is the capacity of " + Premiership[stadiumNumber].Name + "?");
            int inputCapacity = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("\nQ4) In what year was " + Premiership[stadiumNumber].Name + " construction completed?");
            int inputYearBuilt = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("\nQ5) How much did " + Premiership[stadiumNumber].Name + " cost to build?");
            decimal inputCost = Convert.ToInt32(Console.ReadLine());
            Console.Clear();
            if (inputCity == Premiership[stadiumNumber].City)
            {
                cityCheck = "\x2713";
            }
            else
            {
                cityCheck = "X  You put " + inputCity;
            }
            if (inputTeam == Premiership[stadiumNumber].Team)
            {
                teamCheck = "\u221A";
            }
            else
            {
                teamCheck = "X  You put " + inputTeam;
            }
            if (inputCapacity == Premiership[stadiumNumber].Capacity)
            {
                capacityCheck = "\u221A";
            }
            else
            {
                capacityCheck = "X  You put " + inputCapacity;
            }
            if (inputYearBuilt == Premiership[stadiumNumber].YearBuilt)
            {
                yearBuiltCheck = "\u221A";
            }
            else
            {
                yearBuiltCheck = "X  You put " + inputYearBuilt;
            }
            if (inputCost == Premiership[stadiumNumber].Cost)
            {
                costCheck = "\u221A";
            }
            else
            {
                costCheck = "X  You put " + inputCost;
            }
            Console.WriteLine("====================");
            Console.WriteLine("Stadium #" + (stadiumNumber + 1) + " - " + Premiership[stadiumNumber].Name);
            Console.WriteLine("====================");
            Console.WriteLine("\nQ1) City\nAnswer: " + Premiership[stadiumNumber].City + "  " + cityCheck);
            Console.WriteLine("\nQ2) Team\nAnswer: " + Premiership[stadiumNumber].Team + "  " + teamCheck);
            Console.WriteLine("\nQ3) Capacity\nAnswer: " + Premiership[stadiumNumber].Capacity + "  " + capacityCheck);
            Console.WriteLine("\nQ4) Year Built\nAnswer: " + Premiership[stadiumNumber].YearBuilt + "  " + yearBuiltCheck);
            Console.WriteLine("\nQ5) Cost\nAnswer: " + Premiership[stadiumNumber].Cost + "  " + costCheck);
            Console.ReadLine();
            Console.Clear();
        }

        static bool Setup()
        {
            try
            {
                BinaryWriter bw2 = new BinaryWriter(new FileStream("config", FileMode.Create));
                bw2.Write(5);
                bw2.Close();
                return true;
            }
            catch (Exception e)
            {
                return false;
            }
        }

        struct StadiumStruct
        {
            public string Name;
            public string City;
            public string Team;
            public int Capacity;
            public int YearBuilt;
            public decimal Cost;
        }
    }
}
